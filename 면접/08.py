"""
문제 설명
XX 회사는 부산에서 서울까지 물건 운반을 위해 최대 M의 무게를 실을 수 있는 트럭을 고용하려고 합니다. 물건을 싣고 간 트럭은 돌아오지 않기 때문에 적절한 대수의 트럭을 고용해야 합니다. 아래 그림은 M = 10일 때 [2, 3, 7, 8] 무게의 물건을 운반하는 예시입니다.

트럭1_fxhhev.png

위 예시에서 트럭에 최대 10의 무게까지 실을 수 있으므로 무게 3, 8의 물건을 동시에 싣는 등, 무게 10이 넘어가도록 싣지 못합니다. 한 트럭에 한 개씩의 물건을 싣는다면 총 4대의 트럭이 필요합니다. 만약 무게 7의 물건을 한 트럭에, 무게 8의 물건을 한 트럭에, 무게 2, 3의 물건을 한 트럭에 싣는다면 총 3대의 트럭이 필요합니다. 마지막으로 무게 2, 8의 물건을 한 트럭에, 무게 3, 7의 물건을 한 트럭에 싣는다면 총 두 대의 트럭만 필요하게 됩니다.

트럭에 실을 수 있는 최대 무게 M, 운반해야 하는 물건의 무게가 들어있는 배열 load가 매개변수로 주어질 때, 모든 물건을 운반하기 위해 필요한 트럭 수의 최솟값을 return 하도록 solution 함수를 완성해 주세요.

제한사항
트럭에 실을 수 있는 최대 무게 M : 1 ≤ M ≤ 40, M은 자연수
load는 운반해야 하는 물건의 무게가 들어있는 배열로 길이(옮겨야 하는 물건의 개수)는 1 이상 12 이하입니다.
load의 각 원소는 운반해야 하는 물건들의 무게로, 각 물건의 무게는 1 이상 40 이하 입니다.
물건을 쪼개거나 나누어 옮길 수 없습니다.
모든 물건을 옮길 수 없는 경우에는 -1을 반환하세요.


입출력 예
M	load	        result
10	[2,3,7,8]	        2
5	[2,2,2,2,2]	        3
20	[16,15,9,17,1,3]	4


입출력 예 설명
입출력 예 #1
무게 [2, 8]의 물건을 한 트럭에, 무게 [3, 7]의 물건을 한 트럭에 실으면 최소 두 대의 트럭이 필요합니다.

입출력 예 #2
무게 [2, 2]의 물건을 한 트럭에, 무게 [2, 2]의 물건을 한 트럭에, 나머지 무게 [2]의 물건을 한 트럭에 실으면 최소 3대의 트럭이 필요합니다.

입출력 예 #3
무게 [16, 3]의 물건을 한 트럭에, 무게 [17]의 물건을 한 트럭에, 무게 [15]의 물건을 한 트럭에, 무게 [9, 1]의 물건을 한 트럭에 실으면 최소 4대의 트럭이 필요합니다.
"""
"""
java
public class Solution {
    public int solution(int M, int[] load) {
        int answer = 0;
        return answer;
    }
}
"""


from collections import deque

load = [16, 15, 9, 17, 1, 3]
M = 20


def solution(M, load):
    if max(load) >= M:
        answer = -1

    else:
        load = deque(sorted(load))
        answer = 0
        a = load.pop()

        while load:
            cnt = 0

            for i in load:
                if a + i <= M:
                    a += i
                    cnt += 1
                else:
                    break

            for _ in range(cnt):
                load.popleft()

            if len(load) >= 1:
                a = load.pop()
                answer += 1

    return answer


print(solution(M, load))
